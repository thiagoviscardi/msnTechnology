AWSTemplateFormatVersion: '2010-09-09'
Description: 'Static website hosting with S3 and CloudFront'

Resources:

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join ['.', ['admin', !ImportValue Domain]]
      WebsiteConfiguration:
        ErrorDocument: 'index.html'
        IndexDocument: 'index.html'

  ReadPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
            Principal: '*'

  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3Bucket

  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403 # not found
            ResponseCode: 404
            ResponsePagePath: '/index.html'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600 # in seconds
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          MaxTTL: 86400 # in seconds
          MinTTL: 60 # in seconds
          TargetOriginId: s3origin
          ViewerProtocolPolicy: 'redirect-to-https'
        DefaultRootObject: '/index.html'
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt 'S3Bucket.DomainName'
            Id: s3origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        PriceClass: 'PriceClass_All'
        Aliases: 
          - !Join ['.', ['admin', !ImportValue Domain]] 
        ViewerCertificate:
          # sensiconnect.io certificate
          AcmCertificateArn: !ImportValue Certificate
          SslSupportMethod: sni-only

  SiteDomain:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue Zone
      Name: !Join ['.', ['admin', !ImportValue Domain]]
      Type: CNAME
      ResourceRecords:
        - !GetAtt CloudFrontDistribution.DomainName
      TTL: 3600

Outputs:
  AdminCloudfrontDomain:
    Description: 'AdminCloudfrontDomain'
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: AdminCloudfrontDomain
  AdminDomain:
    Description: 'AdminDomain'
    Value: !Join ['.', ['admin', !ImportValue Domain]]
    Export:
      Name: AdminDomain

